<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY postgresql-download-http "http://ftp.postgresql.org/pub/source/v&postgresql-version;/postgresql-&postgresql-version;.tar.bz2">
  <!--  <!ENTITY postgresql-download-ftp  "ftp://ftp.postgresql.org/pub/source/v&postgresql-version;/postgresql-&postgresql-version;.tar.bz2"> -->
  <!ENTITY postgresql-download-ftp  " ">
  <!ENTITY postgresql-md5sum        "a88ceea8ecf2741307f663e4539b58b7">
  <!ENTITY postgresql-size          "19 MB">
  <!ENTITY postgresql-buildsize     "185 MB (add 37 MB for tests)">
  <!ENTITY postgresql-time          "0.6 SBU (with parallelism=4, add 0.1 SBU for tests)">
]>

<sect1 id="postgresql" xreflabel="PostgreSQL-&postgresql-version;">
  <?dbhtml filename="postgresql.html"?>

  <sect1info>
    <othername>$LastChangedBy$</othername>
    <date>$Date$</date>
  </sect1info>

  <title>PostgreSQL-&postgresql-version;</title>

  <indexterm zone="postgresql">
    <primary sortas="a-PostgreSQL">PostgreSQL</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to PostgreSQL</title>

    <para>
      <application>PostgreSQL</application> is an advanced
      object-relational database management system (ORDBMS), derived
      from the Berkeley Postgres database management system.
    </para>

    &lfs91_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&postgresql-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&postgresql-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &postgresql-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &postgresql-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &postgresql-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &postgresql-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">PostgreSQL Dependencies</bridgehead>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="python2"/>,
      <xref linkend="tcl"/>,
      <xref linkend="libxml2"/>,
      <xref linkend="libxslt"/>,
      <xref linkend="openldap"/>,
      <xref linkend="linux-pam"/>,
      <xref linkend="mitkrb"/> and
      <ulink url="https://developer.apple.com/bonjour/">Bonjour</ulink>
    </para>

    <bridgehead renderas="sect4">Optional (To Regenerate Documentation)</bridgehead>
    <para role="optional">
      <xref linkend="fop"/>,
      <xref linkend="sgml-dtd"/>,
      <xref linkend="docbook-dsssl"/>,
      <xref linkend="docbook-utils"/>,
      <xref linkend="openjade"/>, and
      <xref linkend="perl-sgmlspm"/>
    </para>

    <para condition="html" role="usernotes">User Notes:
    <ulink url="&blfs-wiki;/postgresql"/></para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of PostgreSQL</title>

    <para>
      For enhanced security, it is better to have a dedicated group and user
      for running the PostgreSQL server. First, issue as the
      <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>groupadd -g 41 postgres &amp;&amp;
useradd -c "PostgreSQL Server" -g postgres -d /srv/pgsql/data \
        -u 41 postgres</userinput></screen>

    <note>
      <para>
        There are several configuration items that add additional
        functionality with optional packages to
        <application>PostgreSQL</application>.  Use <command>./configure
        --help</command> to see a list.
      </para>
    </note>

    <para>
      Install <application>PostgreSQL</application> with the
      following commands:
    </para>

<screen><userinput>sed -i '/DEFAULT_PGSOCKET_DIR/s@/tmp@/run/postgresql@' src/include/pg_config_manual.h &amp;&amp;

./configure --prefix=/usr          \
            --enable-thread-safety \
            --docdir=/usr/share/doc/postgresql-&postgresql-version; &amp;&amp;
make</userinput></screen>

    <para>
      There are a number of programs in the
      <filename class="directory">contrib/</filename> directory. If you are
      going to run this installation as a server and wish to build some of
      them, enter <command>make -C contrib</command> or <command>make -C
      contrib/<replaceable>&lt;SUBDIR-NAME&gt;</replaceable></command> for
      each subdirectory.
    </para>

    <para>
      Tests must be run as an unprivileged user because they need to start a
      temporary server and this is prevented as the root user. For the same
      reason, you need to stop all PostgreSQL servers if any are running. If a
      previous version of PostgreSQL is installed, it may be necessary to use
      <command>--disable-rpath</command> with <command>configure</command> to
      avoid failures, but <emphasis>installing the binaries created using this
      switch is not recommended</emphasis>. To test the results, issue:
      <command>make check</command>.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make install      &amp;&amp;
make install-docs</userinput></screen>

    <para>
      If you made any of the <filename class="directory">contrib/</filename>
      programs, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="nodump"><userinput>make -C contrib/<replaceable>&lt;SUBDIR-NAME&gt;</replaceable> install</userinput></screen>

    <tip>
      <para>
        If you only intend to use <application>PostgreSQL</application> as a
        client to connect to a server on another machine, your installation is
        complete and you should not run the remaining commands.
      </para>
    </tip>

    <para>
      Initialize a database cluster with the following commands issued by the
      <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>install -v -dm700 /srv/pgsql/data &amp;&amp;
install -v -dm755 /run/postgresql &amp;&amp;
chown -Rv postgres:postgres /srv/pgsql /run/postgresql</userinput></screen>

    <para>
      Now, initialize the database as the <systemitem
      class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>su - postgres -c '/usr/bin/initdb -D /srv/pgsql/data'</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para>
      <command>sed -i ...</command>: This sed changes server socket location
      from <filename class="directory">/tmp</filename> to
      <filename class="directory">/run/postgresql</filename><!-- and fix up the
      regression tests to use <filename class="directory">/tmp</filename> so
      that they can work reliably-->.
    </para>

    <para>
      <parameter>--enable-thread-safety</parameter>: This switch makes the
      client libraries thread-safe by allowing concurrent threads in
      <filename class="libraryfile">libpq</filename> and ECPG programs to
      safely control their private connection handles.
    </para>

    <para>
      <option>--with-openssl</option>: builds the package  with support for
      <application>OpenSSL</application> encrypted connections.
    </para>

    <para>
      <option>--with-perl</option>: builds the PL/Perl server-side language.
    </para>

    <para>
      <option>--with-python</option>: builds the PL/Python server-side
      language. Add PYTHON=/usr/bin/python2 for Python2 support, otherwise
      Python3 is used by default.
    </para>

    <para>
      <option>--with-tcl</option>: builds the PL/Tcl server-side language.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuring PostgreSQL</title>

    <sect3 id="postgresql-config">
      <title>Config Files</title>

      <para>
        <filename>$PGDATA/pg_ident.con</filename>,
        <filename>$PGDATA/pg_hba.conf</filename>, and
        <filename>$PGDATA/postgresql.conf</filename>
      </para>

      <indexterm zone="postgresql postgresql-config">
        <primary sortas="e-A.PGDATA-pg_ident.con">$PGDATA/pg_indent.con</primary>
      </indexterm>

      <indexterm zone="postgresql postgresql-config">
        <primary sortas="e-A.PGDATA-pg_hba.conf">$PGDATA/pg_hba_conf</primary>
      </indexterm>

      <indexterm zone="postgresql postgresql-config">
        <primary sortas="e-A.PGDATA-postgresql.conf">$PGDATA/postgresql.conf</primary>
      </indexterm>

      <para>
        The <envar>PGDATA</envar> environment variable is used to
        distinguish database clusters from one another by setting it to
        the value of the directory which contains the cluster desired.
        The three configuration files exist in every <filename
        class="directory">PGDATA/</filename> directory. Details on the
        format of the files and the options that can be set in each can
        be found in <filename>
        /usr/share/doc/postgresql-&postgresql-version;/html/index.html</filename>.
      </para>

    </sect3>

    <sect3  id="postgresql-init">
      <title><phrase revision="sysv">Boot Script</phrase>
             <phrase revision="systemd">Systemd Unit</phrase></title>

      <para>
        Install the
        <phrase revision="sysv"><filename>/etc/rc.d/init.d/postgresql</filename>
        init script</phrase>
        <phrase revision="systemd"><filename>postgresql.service</filename>
        unit</phrase> included in the
        <xref linkend="bootscripts" revision="sysv"/>
        <xref linkend="systemd-units" revision="systemd"/> package:
      </para>

      <indexterm zone="postgresql postgresql-init">
        <primary sortas="f-postgresql">postgresql</primary>
      </indexterm>

<screen role="root"><userinput>make install-postgresql</userinput></screen>

    </sect3>

    <sect3>
      <title>Starting the PostgreSQL Server and Creating a Sample Database</title>

      <para>
        The database server can be manually started with the following command
        (as the <systemitem class="username">root</systemitem> user):
      </para>

<screen role="root"><userinput>su - postgres -c '/usr/bin/postgres -D /srv/pgsql/data > \
                  /srv/pgsql/data/logfile 2&gt;&amp;1 &amp;'</userinput></screen>
      <note>
        <para>
          If you are scripting this part, you should wait for the server to
          start before going on, by adding for example
          <command>sleep 2</command> after the above command.
        </para>
      </note>

      <para>
        The instructions below show how to create a database, add a table to
        it, insert some rows into the table and select them, to verify that the
        installation is working properly. Still as user <systemitem
        class="username">root</systemitem>, issue:
      </para>

<screen role="root"><userinput>su - postgres -c '/usr/bin/createdb test' &amp;&amp;
echo "create table t1 ( name varchar(20), state_province varchar(20) );" \
    | (su - postgres -c '/usr/bin/psql test ') &amp;&amp;
echo "insert into t1 values ('Billy', 'NewYork');" \
    | (su - postgres -c '/usr/bin/psql test ') &amp;&amp;
echo "insert into t1 values ('Evanidus', 'Quebec');" \
    | (su - postgres -c '/usr/bin/psql test ') &amp;&amp;
echo "insert into t1 values ('Jesse', 'Ontario');" \
    | (su - postgres -c '/usr/bin/psql test ') &amp;&amp;
echo "select * from t1;" | (su - postgres -c '/usr/bin/psql test')</userinput></screen>

      <para>
        When you are done with testing, you can shut down the server, by
        issuing as <systemitem class="username">root</systemitem>:
      </para>

<screen role="root"><userinput>su - postgres -c "/usr/bin/pg_ctl stop -D /srv/pgsql/data"</userinput></screen>

    </sect3>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          clusterdb, createdb, createuser, dropdb,
          dropuser, ecpg, initdb, pg_archivecleanup, pg_basebackup, pg_config,
          pg_controldata, pg_ctl, pg_dump, pg_dumpall, pg_isready,
          pg_receivewal, pg_recvlogical, pg_resetwval, pg_restore, pg_rewind,
          pg_test_fsync, pg_test_timing, pg_upgrade, pg_waldump, pgbench,
          postgres, postmaster (deprecated), psql, reindexdb, vacuumdb,
          optionally, if Tcl support has been built, pltcl_delmod,
          pltcl_listmod, pltcl_loadmod, and optionally (in contrib/) oid2name,
          pg_standby, vacuumlo, and many others

        </seg>
        <seg>
          libecpg.{so,a}, libecpg_compat.{so,a}, libpgcommon.a, libpgport.a,
          libpgtypes.{so,a}, libpq.{so,a}, various charset modules, and
          optionally programming language modules under /usr/lib/postgresql
        </seg>
        <seg>
          /usr/include/{libpq,postgresql},
          /usr/lib/postgresql,
          /usr/share/{doc/postgresql-&postgresql-version;,postgresql}, and
          /srv/pgsql
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="clusterdb">
        <term><command>clusterdb</command></term>
        <listitem>
          <para>
            is a utility for reclustering tables in a
            <application>PostgreSQL</application> database.
          </para>
          <indexterm zone="postgresql clusterdb">
            <primary sortas="b-clusterdb">clusterdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="createdb">
        <term><command>createdb</command></term>
        <listitem>
          <para>
            creates a new <application>PostgreSQL</application>
            database.
          </para>
          <indexterm zone="postgresql createdb">
            <primary sortas="b-createdb">createdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>
 
      <varlistentry id="createuser">
        <term><command>createuser</command></term>
        <listitem>
          <para>
            defines a new <application>PostgreSQL</application>
            user account.
          </para>
          <indexterm zone="postgresql createuser">
            <primary sortas="b-createuser">createuser</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dropdb">
        <term><command>dropdb</command></term>
        <listitem>
          <para>
            removes a <application>PostgreSQL</application> database.
          </para>
          <indexterm zone="postgresql dropdb">
            <primary sortas="b-dropdb">dropdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dropuser">
        <term><command>dropuser</command></term>
        <listitem>
          <para>
            removes a <application>PostgreSQL</application> user account.
          </para>
          <indexterm zone="postgresql dropuser">
            <primary sortas="b-dropuser">dropuser</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="ecpg">
        <term><command>ecpg</command></term>
        <listitem>
          <para>
            is the embedded SQL preprocessor.
          </para>
          <indexterm zone="postgresql ecpg">
            <primary sortas="b-ecpg">ecpg</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="initdb">
        <term><command>initdb</command></term>
        <listitem>
          <para>
            creates a new database cluster.
          </para>
          <indexterm zone="postgresql initdb">
            <primary sortas="b-initdb">initdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="oid2name">
        <term><command>oid2name</command></term>
        <listitem>
          <para>
            resolves OIDs (Object IDs) and file nodes in a PostgreSQL data
            directory.
          </para>
          <indexterm zone="postgresql oid2name">
            <primary sortas="b-oid2name">oid2name</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_archivecleanup">
        <term><command>pg_archivecleanup</command></term>
        <listitem>
          <para>
            cleans up PostgreSQL WAL (write-ahead log) archive files.
          </para>
          <indexterm zone="postgresql pg_archivecleanup">
            <primary sortas="b-pg_archivecleanup">pg_archivecleanup</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_basebackup">
        <term><command>pg_basebackup</command></term>
        <listitem>
          <para>
            takes base backups of a running
            <application>PostgreSQL</application> cluster.
          </para>
          <indexterm zone="postgresql pg_basebackup">
            <primary sortas="b-pg_basebackup">pg_basebackup</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_config">
        <term><command>pg_config</command></term>
        <listitem>
          <para>
            retrieves <application>PostgreSQL</application> version
            information.
          </para>
          <indexterm zone="postgresql pg_config">
            <primary sortas="b-pg_config">pg_config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_controldata">
        <term><command>pg_controldata</command></term>
        <listitem>
          <para>
            returns information initialized during <command>initdb</command>,
            such as the catalog version and server locale.
          </para>
          <indexterm zone="postgresql pg_controldata">
            <primary sortas="b-pg_controldata">pg_controldata</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_ctl">
        <term><command>pg_ctl</command></term>
        <listitem>
          <para>
            controls stopping and starting the database server.
          </para>
          <indexterm zone="postgresql pg_ctl">
            <primary sortas="b-pg_ctl">pg_ctl</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_dump">
        <term><command>pg_dump</command></term>
        <listitem>
          <para>
            dumps database data and metadata into scripts which are used
            to recreate the database.
          </para>
          <indexterm zone="postgresql pg_dump">
            <primary sortas="b-pg_dump">pg_dump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_dumpall">
        <term><command>pg_dumpall</command></term>
        <listitem>
          <para>
            recursively calls <command>pg_dump</command> for each
            database in a cluster.
          </para>
          <indexterm zone="postgresql pg_dumpall">
            <primary sortas="b-pg_dumpall">pg_dumpall</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_isready">
        <term><command>pg_isready</command></term>
        <listitem>
          <para>
            checks the connection status of a PostgreSQL server.
          </para>
          <indexterm zone="postgresql pg_isready">
            <primary sortas="b-pg_isready">pg_isready</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_receivewal">
        <term><command>pg_receivewal</command></term>
        <listitem>
          <para>
            is used to stream write-ahead logs from a PostgreSQL server.
          </para>
          <indexterm zone="postgresql pg_receivewal">
            <primary sortas="b-pg_receivewal">pg_receivewal</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_recvlogical">
        <term><command>pg_recvlogical</command></term>
        <listitem>
          <para>
            controls PostgreSQL logical decoding streams.
          </para>
          <indexterm zone="postgresql pg_recvlogical">
            <primary sortas="b-pg_recvlogical">pg_recvlogical</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_resetwal">
        <term><command>pg_resetwal</command></term>
        <listitem>
          <para>
            resets the write-ahead log and other control information
            of a PostgreSQL database cluster.
          </para>
          <indexterm zone="postgresql pg_resetwal">
            <primary sortas="b-pg_resetwal">pg_resetwal</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_restore">
        <term><command>pg_restore</command></term>
        <listitem>
          <para>
            creates databases from dump files created by
            <command>pg_dump</command>.
          </para>
          <indexterm zone="postgresql pg_restore">
            <primary sortas="b-pg_restore">pg_restore</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_rewind">
        <term><command>pg_rewind</command></term>
        <listitem>
          <para>
            synchronizes a PostgreSQL data directory with another data
            directory that was forked from the first one.
          </para>
          <indexterm zone="postgresql pg_rewind">
            <primary sortas="b-pg_rewind">pg_rewind</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_standby">
        <term><command>pg_standby</command></term>
        <listitem>
          <para>
            supports the creation of a PostgreSQL warm standby server.
          </para>
          <indexterm zone="postgresql pg_standby">
            <primary sortas="b-pg_standby">pg_standby</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_test_fsync">
        <term><command>pg_test_fsync</command></term>
        <listitem>
          <para>
            determines fastest wal_sync method for PostgreSQL.
          </para>
          <indexterm zone="postgresql pg_test_fsync">
            <primary sortas="b-pg_test_fsync">pg_test_fsync</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_test_timing">
        <term><command>pg_test_timing</command></term>
        <listitem>
          <para>
            measures timing overhead.
          </para>
          <indexterm zone="postgresql pg_test_timing">
            <primary sortas="b-pg_test_timing">pg_test_timing</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_upgrade">
        <term><command>pg_upgrade</command></term>
        <listitem>
          <para>
            upgrades a PostgreSQL server instance.
          </para>
          <indexterm zone="postgresql pg_upgrade">
            <primary sortas="b-pg_upgrade">pg_upgrade</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pg_waldump">
        <term><command>pg_waldump</command></term>
        <listitem>
          <para>
            displays a human-readable rendering of the write-ahead log of a
            PostgreSQL database cluster.
          </para>
          <indexterm zone="postgresql pg_waldump">
            <primary sortas="b-pg_waldump">pg_waldump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pgbench">
        <term><command>pgbench</command></term>
        <listitem>
          <para>
            runs a benchmark test on PostgreSQL.
          </para>
          <indexterm zone="postgresql pgbench">
            <primary sortas="b-pgbench">pgbench</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pltcl_delmod">
        <term><command>pltcl_delmod</command></term>
        <listitem>
          <para>
            is a support script used to delete a module from a
            PL/<application>Tcl</application> table. The command
            requires the <ulink
            url="http://flightaware.github.io/Pgtcl/">Pgtcl</ulink>
            package to be installed also.
          </para>
          <indexterm zone="postgresql pltcl_delmod">
            <primary sortas="b-pltcl_delmod">pltcl_delmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pltcl_listmod">
        <term><command>pltcl_listmod</command></term>
        <listitem>
          <para>
            is a support script used to list the modules in a
            PL/<application>Tcl</application> table. The command
            requires the <ulink
            url="http://gborg.postgresql.org/project/pgtcl/">Pgtcl</ulink>
            package to be installed also.
          </para>
          <indexterm zone="postgresql pltcl_listmod">
            <primary sortas="b-pltcl_listmod">pltcl_listmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pltcl_loadmod">
        <term><command>pltcl_loadmod</command></term>
        <listitem>
          <para>
            is a support script used to load a module into a
            PL/<application>Tcl</application> table. The command
            requires the <ulink
            url="http://gborg.postgresql.org/project/pgtcl/">Pgtcl</ulink>
            package to be installed also.
          </para>
          <indexterm zone="postgresql pltcl_loadmod">
            <primary sortas="b-pltcl_loadmod">pltcl_loadmod</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="postgres">
        <term><command>postgres</command></term>
        <listitem>
          <para>
            is the PostgreSQL database server.
          </para>
          <indexterm zone="postgresql postgres">
            <primary sortas="b-postgres">postgres</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="postmaster">
        <term><command>postmaster</command></term>
        <listitem>
          <para>
            (deprecated, a symlink to <command>postgres</command>) is a
            multi-user database daemon.
          </para>
          <indexterm zone="postgresql postmaster">
            <primary sortas="b-postmaster">postmaster</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="psql">
        <term><command>psql</command></term>
        <listitem>
          <para>
            is a console based database shell.
          </para>
          <indexterm zone="postgresql psql">
            <primary sortas="b-psql">psql</primary>
          </indexterm>
        </listitem>
      </varlistentry>

       <varlistentry id="reindexdb">
        <term><command>reindexdb</command></term>
        <listitem>
          <para>
            is a utility for rebuilding indexes in a database.
          </para>
          <indexterm zone="postgresql reindexdb">
            <primary sortas="b-reindexdb">reindexdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vacuumdb">
        <term><command>vacuumdb</command></term>
        <listitem>
          <para>
            compacts databases and generates statistics for the query analyzer.
          </para>
          <indexterm zone="postgresql vacuumdb">
            <primary sortas="b-vacuumdb">vacuumdb</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="vacuumlo">
        <term><command>vacuumlo</command></term>
        <listitem>
          <para>
            removes orphaned large objects from a PostgreSQL database.
          </para>
          <indexterm zone="postgresql vacuumlo">
            <primary sortas="b-vacuumlo">vacuumlo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libecpg">
        <term><filename class='libraryfile'>libecpg.{so,a}</filename></term>
        <listitem>
          <para>
            contains functions to support embedded SQL in C programs.
          </para>
          <indexterm zone="postgresql libecpg">
            <primary sortas="c-libecpg">libecpg.{so,a}</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libecpg_compat">
        <term><filename class='libraryfile'>libecpg_compat.{so,a}</filename></term>
        <listitem>
          <para>
            is the ecpg compatibility library.
          </para>
          <indexterm zone="postgresql libecpg_compat">
            <primary sortas="c-libecpg_compat">libecpg_compat.{so,a}</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libgport">
        <term><filename class='libraryfile'>libgport.a</filename></term>
        <listitem>
          <para>
            is the port-specific subsystem of the Postgres backend.
          </para>
          <indexterm zone="postgresql libgport">
            <primary sortas="c-libgport">libgport.a</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpgtypes">
        <term><filename class='libraryfile'>libpgtypes.{so,a}</filename></term>
        <listitem>
          <para>
            contains functions for dealing with Postgres data types.
          </para>
          <indexterm zone="postgresql libpgtypes">
            <primary sortas="c-libpgtypes">libpgtypes.{so,a}</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libpq">
        <term><filename class='libraryfile'>libpq.{so,a}</filename></term>
        <listitem>
          <para>
            is the C programmer's API to Postgres.
          </para>
          <indexterm zone="postgresql libpq">
            <primary sortas="c-libpq">libpq.{so,a}</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
