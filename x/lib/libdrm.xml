<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY libdrm-download-http "https://dri.freedesktop.org/libdrm/libdrm-&libdrm-version;.tar.bz2">
  <!ENTITY libdrm-download-ftp  " ">
  <!ENTITY libdrm-md5sum        "f47bc87e28198ba527e6b44ffdd62f65">
  <!ENTITY libdrm-size          "836 KB">
  <!ENTITY libdrm-buildsize     "12 MB (with tests)">
  <!ENTITY libdrm-time          "less than 0.1 SBU (add 0.8 SBU for tests)">
]>

<sect1 id="libdrm" xreflabel="libdrm-&libdrm-version;">
  <?dbhtml filename="libdrm.html"?>

  <sect1info>
    <othername>$LastChangedBy$</othername>
    <date>$Date$</date>
  </sect1info>

  <title>libdrm-&libdrm-version;</title>

  <indexterm zone="libdrm">
    <primary sortas="a-libdrm">libdrm</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to libdrm</title>

    <para>
      <application>libdrm</application> provides a user space library for
      accessing the DRM, direct rendering manager, on operating systems that
      support the ioctl interface. libdrm is a low-level library, typically used
      by graphics drivers such as the Mesa DRI drivers, the X drivers, libva and
      similar projects.
    </para>

    &lfs91_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&libdrm-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&libdrm-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &libdrm-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &libdrm-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &libdrm-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &libdrm-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">libdrm Dependencies</bridgehead>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend="xorg7-lib"/> (for Intel KMS API support required by Mesa)
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="cairo"/> (for tests),
      <xref linkend="cmake"/> (could be used to find dependencies without pkgconfig files),
      <xref linkend="DocBook"/>,
      <xref linkend="docbook-xsl"/> and
      <xref linkend="libxslt"/> (to build manual pages),
      <xref linkend="libatomic_ops"/> (required by architectures without native atomic operations),
      <xref linkend="valgrind"/>, and
      <ulink url="http://cunit.sourceforge.net/">CUNIT</ulink> (for AMDGPU tests)
    </para>

    <para condition="html" role="usernotes">User Notes:
      <ulink url="&blfs-wiki;/libdrm"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation of libdrm</title>

    <para>
      Install <application>libdrm</application> by running the following
      commands:
    </para>

<screen><userinput>mkdir build &amp;&amp;
cd    build &amp;&amp;

meson --prefix=$XORG_PREFIX -Dudev=true &amp;&amp;
ninja</userinput></screen>

    <para>
      To check the results, issue <command>ninja test</command>. One test,
      'threaded' in the nouveau subdirectory, is known to fail with a 
      30 second timeout.
      
      <!-- Tests may hang
      for unknown reasons. --><!-- If nouveau threaded test hangs, you can disable it
      with
      <command>sed -i 's/^TESTS/#&amp;/' tests/nouveau/Makefile.in</command>. 
      
      Now that tests are run with ninja, the test merely times out after 30 seconds.
      -->
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>ninja install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para>
      <parameter>-Dudev=true</parameter>: This parameter enables support for using
      <application>Udev</application> instead of <command>mknod</command>.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          None
        </seg>
        <seg>
          libdrm_amdgpu.so, libdrm_intel.so, libdrm_nouveau.so,
          libdrm_radeon.so, libdrm.so, and libkms.so
        </seg>
        <seg>
          /usr/include/libdrm, /usr/include/libkms, and /usr/share/libdrm
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libdrm_amdgpu">
        <term><filename class="libraryfile">libdrm_amdgpu.so</filename></term>
        <listitem>
          <para>
            contains the AMDGPU specific Direct Rendering Manager functions.
          </para>
          <indexterm zone="libdrm libdrm_amdgpu">
            <primary sortas="c-libdrm_amdgpu">libdrm_amdgpu.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libdrm_intel">
        <term><filename class="libraryfile">libdrm_intel.so</filename></term>
        <listitem>
          <para>
            contains the Intel specific Direct Rendering Manager
            functions.
          </para>
          <indexterm zone="libdrm libdrm_intel">
            <primary sortas="c-libdrm_intel">libdrm_intel.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libdrm_nouveau">
        <term><filename class="libraryfile">libdrm_nouveau.so</filename></term>
        <listitem>
          <para>
            contains the open source nVidia (Nouveau) specific Direct
            Rendering Manager functions.
          </para>
          <indexterm zone="libdrm libdrm_nouveau">
            <primary sortas="c-libdrm_nouveau">libdrm_nouveau.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libdrm_radeon">
        <term><filename class="libraryfile">libdrm_radeon.so</filename></term>
        <listitem>
          <para>
            contains the AMD Radeon specific Direct Rendering Manager
            functions.
          </para>
          <indexterm zone="libdrm libdrm_radeon">
            <primary sortas="c-libdrm_radeon">libdrm_radeon.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libdrm-lib">
        <term><filename class="libraryfile">libdrm.so</filename></term>
        <listitem>
          <para>
            contains the Direct Rendering Manager API functions.
          </para>
          <indexterm zone="libdrm libdrm-lib">
            <primary sortas="c-libdrm">libdrm.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libkms">
        <term><filename class="libraryfile">libkms.so</filename></term>
        <listitem>
          <para>
            contains API functions for kernel mode setting abstraction.
          </para>
          <indexterm zone="libdrm libkms">
            <primary sortas="c-libkms">libkms.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
